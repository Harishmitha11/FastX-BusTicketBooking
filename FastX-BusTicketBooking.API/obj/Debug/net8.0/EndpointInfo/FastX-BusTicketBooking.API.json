{
  "openapi": "3.0.1",
  "info": {
    "title": "FastX-BusTicketBooking.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Auth/Register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/BookTicket": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/GetAllBookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/{id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/{id}/Cancel": {
      "put": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/MyBookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/CancelSeats": {
      "put": {
        "tags": [
          "Bookings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSeatsDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSeatsDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSeatsDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Buses/GetAllBuses": {
      "get": {
        "tags": [
          "Buses"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Buses/{id}/GetBusById": {
      "get": {
        "tags": [
          "Buses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Buses/AddBus": {
      "post": {
        "tags": [
          "Buses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Buses/{id}/UpdateBus": {
      "put": {
        "tags": [
          "Buses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Buses/{id}/DeleteBus": {
      "delete": {
        "tags": [
          "Buses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payments/Process": {
      "post": {
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payments/GetAll": {
      "get": {
        "tags": [
          "Payments"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payments/{bookingId}/GetByBooking": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Refunds/ProcessRefund": {
      "post": {
        "tags": [
          "Refunds"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Refunds/GetAllRefunds": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Refunds/ByBooking/{bookingId}": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/GetAllRoutes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/{id}/GetRouteById": {
      "get": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/AddRoute": {
      "post": {
        "tags": [
          "Routes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/{id}/UpdateRoute": {
      "put": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/{id}/DeleteRoute": {
      "delete": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/Search": {
      "get": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "origin",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "travelDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Seats/GetSeatsByRoute/{routeId}": {
      "get": {
        "tags": [
          "Seats"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Seats/BookSeats/{routeId}/{count}": {
      "put": {
        "tags": [
          "Seats"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/GetAllUsers": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/{id}/GetUserById": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/{id}/DeleteUser": {
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BookingRequestDTO": {
        "required": [
          "noOfSeats",
          "routeId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "routeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "noOfSeats": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BusDTO": {
        "required": [
          "amenities",
          "busId",
          "busName",
          "busNumber",
          "busType",
          "totalSeats"
        ],
        "type": "object",
        "properties": {
          "busId": {
            "type": "integer",
            "format": "int32"
          },
          "busName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "busNumber": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[A-Z]{2}\\d{2}[A-Z]{1,2}\\d{4}$",
            "type": "string"
          },
          "busType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "totalSeats": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "amenities": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "CancelSeatsDTO": {
        "required": [
          "bookingId",
          "seatIds"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "seatIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "pattern": "^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentDTO": {
        "required": [
          "amount",
          "bookingId",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "maximum": 999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RefundDTO": {
        "required": [
          "bookingId",
          "processedBy",
          "refundAmount",
          "refundDate"
        ],
        "type": "object",
        "properties": {
          "refundId": {
            "type": "integer",
            "format": "int32"
          },
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "refundAmount": {
            "maximum": 999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "refundDate": {
            "type": "string",
            "format": "date-time"
          },
          "processedBy": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterDTO": {
        "required": [
          "address",
          "contactNumber",
          "email",
          "gender",
          "name",
          "password",
          "roleId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 8,
            "pattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&]).{8,}$",
            "type": "string"
          },
          "gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "contactNumber": {
            "minLength": 1,
            "pattern": "^[6-9]\\d{9}$",
            "type": "string"
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RouteDTO": {
        "required": [
          "arrivalTime",
          "busId",
          "departureTime",
          "destination",
          "fare",
          "origin"
        ],
        "type": "object",
        "properties": {
          "routeId": {
            "type": "integer",
            "format": "int32"
          },
          "busId": {
            "type": "integer",
            "format": "int32"
          },
          "origin": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "destination": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "departureTime": {
            "type": "string",
            "format": "date-time"
          },
          "arrivalTime": {
            "type": "string",
            "format": "date-time"
          },
          "fare": {
            "maximum": 999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter 'Bearer' followed by your valid JWT token.\nExample: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}